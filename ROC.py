import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn import metrics
from sklearn.preprocessing import label_binarize
import torch
import torch.nn as nn

fact = [0, 0, 3, 1, 1, 3, 1, 2, 3, 1, 0, 2, 2, 0, 3, 2, 1, 2, 2, 3, 1, 0, 3, 1, 1, 1, 2, 3, 2, 0, 3, 0, 1, 3, 2, 0, 2, 3, 0, 2, 3, 1, 0, 1, 0, 1, 0, 3, 0, 0, 3, 3, 1, 0, 3, 3, 3, 2, 3, 1, 3, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 1, 3, 3, 0, 3, 0, 1, 0, 0, 2, 0, 0, 2, 3, 3, 1, 3, 2, 3, 3, 1, 3, 0, 0, 1, 0, 1, 3, 1, 3, 0, 0, 0, 3, 3, 3, 2, 1, 3, 0, 1, 2, 2, 2, 2, 1, 3, 2, 2, 2, 2, 3, 3, 2, 0, 0, 2, 3, 2, 3, 1, 0, 0, 0, 2, 0, 1, 2, 1]


pre_all_num = [[-0.0012784004, -6.6642823, -13.326134, -17.982286], [-0.072603464, -2.6627412, -8.316431, -10.433805], [-14.669382, -4.983487, -8.000176, -0.007212162], [-2.279435, -0.12092483, -4.6258698, -6.341139], [-7.256241, -0.0009570122, -8.334056, -11.438254], [-23.028708, -13.040422, -10.704121, -2.4795532e-05], [-9.681541, -0.016255856, -5.4587936, -4.439384], [-17.80959, -6.5111175, -0.0014877319, -21.399902], [-21.743164, -11.578782, -5.9368505, -0.002653122], [-5.679884, -0.09502196, -2.4491732, -7.049206], [-7.6293945e-06, -11.915179, -13.746094, -22.396446], [-9.397278, -6.3880005, -0.06433511, -2.8043737], [-9.939948, -7.6529703, -0.0030517578, -5.9818497], [-0.031797886, -3.7618823, -4.821103, -26.508133], [-18.68364, -9.81527, -9.114019, -0.00016498566], [-4.282586, -0.8143989, -0.79050577, -2.4115934], [-4.3885355, -0.016474247, -5.543838, -11.633814], [-12.046513, -4.857467, -0.009127617, -6.637704], [-9.798975, -3.6473646, -0.55203843, -0.92102754], [-17.659153, -6.217062, -3.5491385, -0.031227112], [-3.1196408, -0.04915762, -5.5992527, -9.259799], [-0.000248909, -8.375568, -10.892265, -18.778088], [-14.341578, -5.241975, -6.6886606, -0.0065569878], [-6.550088, -0.0021820068, -8.214101, -7.6443095], [-1.4328082, -0.2958181, -4.0507016, -10.439777], [-6.309232, -0.43166816, -1.125665, -3.716495], [-6.1602473, -1.8422631, -0.1942389, -4.1371303], [-13.478708, -8.88788, -0.95593834, -0.48546743], [-11.862499, -5.706062, -0.005423546, -6.177185], [-0.059367657, -4.387943, -3.0974345, -9.93519], [-15.639456, -10.663341, -6.285866, -0.0018877983], [-8.583069e-06, -11.672984, -14.447231, -20.988335], [-2.1884882, -0.48669988, -1.3061852, -6.0276437], [-16.082556, -4.649712, -2.5737975, -0.089716434], [-6.2814627, -1.9199697, -0.1663034, -5.3540993], [-0.00031471252, -8.18694, -10.223346, -15.396701], [-2.395295, -1.1979535, -0.6349066, -2.5631976], [-17.48801, -8.7300205, -7.2735863, -0.00085544586], [-0.00014019012, -8.951473, -11.472944, -20.170372], [-11.271839, -4.42934, -0.015194893, -5.761952], [-17.143412, -5.044977, -4.722266, -0.015455246], [-8.807944, -0.059141397, -4.554634, -3.062756], [-0.0077023506, -7.8074684, -4.92466, -13.820921], [-1.7204955, -0.19739437, -9.10494, -10.012585], [-0.0017471313, -6.3720436, -10.208524, -16.610142], [-4.353357, -0.015743732, -5.907735, -10.164403], [-0.014784098, -4.6098804, -5.369234, -9.645251], [-13.015095, -7.910153, -4.1688786, -0.015965462], [-1.168771, -0.37291718, -7.544055, -17.750034], [-0.001742363, -6.573696, -7.988213, -12.2163925], [-17.294397, -8.97588, -7.620536, -0.0006170273], [-17.949013, -8.229545, -6.386569, -0.0019526482], [-8.878534, -0.020292997, -5.121811, -4.2698584], [-0.0021800995, -6.131404, -12.385082, -15.957186], [-18.049839, -8.55015, -6.10754, -0.0024223328], [-20.676662, -11.536398, -7.390066, -0.0006275177], [-16.243443, -9.591782, -5.596996, -0.0037846565], [-6.3117485, -2.3708992, -0.29482353, -1.8317977], [-17.02715, -8.44878, -7.548787, -0.00074100494], [-1.0349609, -0.47034526, -3.9145083, -10.692217], [-11.620237, -7.173625, -6.07254, -0.0030856133], [-12.82568, -0.09939432, -4.2189794, -2.527006], [-7.899374, -0.00068712234, -8.945936, -8.591199], [-3.9628057, -0.16489136, -2.0382288, -5.897938], [-11.546278, -0.010825157, -8.549679, -4.5503297], [-0.22242951, -1.616572, -7.1791916, -9.336813], [-0.47268796, -0.9945307, -6.8378367, -5.166249], [-0.0011816025, -7.7234945, -7.211827, -14.296098], [-18.251999, -10.0222, -5.653433, -0.0035562515], [-9.033783, -3.174046, -2.4029193, -0.14203238], [-23.342983, -13.780615, -10.276853, -3.528595e-05], [-3.1827812, -0.05073476, -4.9588823, -6.9296846], [-16.020094, -7.6777215, -6.0113664, -0.0029182434], [-6.236993, -1.2714547, -4.672249, -0.34493017], [-0.65891075, -0.734426, -5.927993, -8.867695], [-15.925412, -5.078626, -5.104346, -0.012375355], [-0.16479373, -1.8863933, -8.341591, -9.493343], [-3.5179543, -0.030529022, -7.822553, -11.87834], [-0.04001236, -4.33649, -3.6451964, -10.645751], [-0.0070853233, -4.999968, -8.111369, -10.716441], [-5.8473387, -3.0151684, -0.059087276, -5.2120867], [-0.0485816, -3.5110023, -4.058121, -8.20945], [-8.010864e-05, -9.427078, -17.73608, -18.044926], [-13.761614, -8.353136, -0.003973961, -5.591528], [-12.16111, -7.9152374, -4.7729516, -0.00886488], [-11.81094, -4.884458, -6.5253124, -0.009077549], [-8.045123, -0.0010933876, -7.1841507, -11.215027], [-3.9108934, -4.063604, -2.6782722, -0.111927986], [-8.690062, -1.3679956, -0.29786348, -5.8737555], [-14.106261, -6.2709084, -7.894594, -0.002266407], [-23.68168, -18.266037, -8.662747, -0.00017261505], [-0.823569, -0.8321091, -2.0745654, -7.834491], [-15.629784, -9.198854, -4.5141573, -0.011115551], [-0.11274862, -2.2488203, -6.8475037, -10.152878], [-0.08040285, -2.6825254, -4.7274904, -11.001321], [-2.8301616, -0.18850255, -2.182467, -10.252872], [-0.021636486, -5.123545, -4.1709976, -11.319748], [-9.916481, -0.006505966, -6.653473, -5.2695465], [-18.970251, -6.249759, -4.588688, -0.012170792], [-10.826822, -0.017564774, -8.089331, -4.069581], [-21.693867, -12.924196, -9.450367, -8.106232e-05], [-0.6408181, -0.76158, -5.0829353, -11.607714], [-0.0017199516, -7.2823973, -6.8773346, -16.66195], [-1.018161, -0.45894003, -5.226723, -6.559168], [-17.042175, -6.0735097, -3.5436559, -0.03170824], [-14.467458, -8.245443, -2.9708924, -0.05289507], [-9.172874, -3.9388418, -4.4152246, -0.03217864], [-2.0388489, -0.9482691, -0.73523515, -5.8032703], [-6.1542916, -0.11917412, -2.95344, -2.846237], [-11.48293, -4.44334, -4.6094475, -0.021963596], [-2.336502e-05, -11.710497, -11.450445, -12.322779], [-6.737695, -0.0020718575, -7.6469574, -7.8070126], [-2.5914783, -1.2350696, -0.46269965, -5.3613367], [-1.2297843, -0.571853, -1.9993144, -4.861644], [-3.7783775, -2.411671, -0.12172341, -6.1745424], [-13.695318, -2.5768137, -3.8645823, -0.10202026], [-7.2320013, -0.00094366074, -8.42466, -13.878603], [-11.683667, -3.784765, -2.9639244, -0.077246904], [-6.199881, -1.7728306, -0.18871403, -9.255264], [-6.5371532, -2.1133072, -0.13060284, -8.821587], [-17.525778, -6.6591344, -0.001282692, -21.098644], [-3.526041, -0.10929763, -2.651897, -5.6274214], [-14.953247, -6.653974, -6.9117455, -0.0022878647], [-13.040792, -4.1161933, -7.218091, -0.017188549], [-3.1034698, -1.768147, -0.24619508, -5.91888], [-0.0014486313, -7.1804557, -7.285308, -14.527275], [-8.2969666e-05, -9.400078, -17.168756, -18.106579], [-9.492829, -6.4804053, -0.0074768066, -5.142947], [-10.406968, -4.4937387, -5.001532, -0.018099308], [-16.662912, -0.0008430481, -7.0824947, -12.687335], [-7.714384, -3.5405746, -1.5889843, -0.26601958], [-1.9653308, -0.20632172, -3.0728939, -10.345402], [-0.43261504, -1.118495, -3.8476977, -5.7796545], [-0.0064611435, -5.073372, -8.627689, -16.599092], [-6.1537676, -5.2722898, -0.007434845, -8.804262], [-7.7661486, -1.4002432, -0.28538895, -6.63207], [-0.010227203, -4.5927415, -9.908899, -14.31562], [-6.547594, -0.0020542145, -8.226973, -7.9546566], [-4.6923785, -1.4356612, -0.31557727, -3.7503529], [-5.453391, -0.0049448013, -7.993895, -8.068977]]
fact = np.array(fact)
n_class = 4
list1 = fact
pre_all = np.array(pre_all_num)

pre_sig = np.zeros((140, 4))
for q in range(140):
    torch_data = torch.from_numpy(pre_all[q,:])
    m = nn.Softmax()
    torch_new = m(torch_data)
    arr_data = torch_new.numpy()
    pre_sig[q,:] = arr_data
list2 =pre_sig
y_one_hot = label_binarize(y=list1, classes=np.arange(n_class))

auc = metrics.roc_auc_score(y_one_hot.ravel(), list2.ravel())
fpr, tpr, thersholds = metrics.roc_curve(y_one_hot.ravel(), list2.ravel())

for i, value in enumerate(thersholds):
    print("%f %f %f" % (fpr[i], tpr[i], value))

plt.plot(fpr, tpr, '-', label='(AUC = {0:.2f})'.format(auc), lw=1)
plt.plot([0, 1], [0, 1], color='navy', lw=1, linestyle='--')
plt.xlim([-0.05, 1.05])  # 设置x、y轴的上下限，以免和边缘重合，更好的观察图像的整体
plt.ylim([-0.05, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
# plt.title('ROC Curve')
plt.legend(loc="lower right")
plt.show()
